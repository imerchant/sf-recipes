@implements IDisposable
@inject Checklist Checklist
@inject RecipesConfiguration Configuration

<MudPaper Elevation="3" Height="Auto" Class="pa-4">
    <MudText Typo="Typo.h6">Checklist</MudText>
    @if (Checklist.NeededResources.Count(x => x.Value > 0) < 1)
    {
        <MudText Align="Align.Center">Empty</MudText>
    }
    else
    {
        <MudList Dense="true">
            @foreach (var (resource, count) in Checklist.NeededResources.Where(x => x.Value > 0).OrderBy(x => x.Key.Name))
            {
                <MudListItem Dense="true">
                    <CheckListItemView
                        Resource="resource"
                        Count="count" />
                </MudListItem>
            }
        </MudList>
    }
</MudPaper>

@code {
    protected override void OnInitialized()
    {
        Checklist.ChecklistChanged += StateHasChanged;
    }

    public void Dispose()
    {
        Checklist.ChecklistChanged -= StateHasChanged;
    }
}
